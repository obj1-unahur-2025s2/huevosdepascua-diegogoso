/*  Se inicia el juego de cacería, escondiendo los huevos de pascua en este orden:
 la matrioshka (con el blister adento con 14 huevitos de chocolate con leche)
  y de decoración una flor con 7 pétalos, el huevoRepostero, el conejo y el huevoMixto.
- el de mayor cantidad de calorías es la matrioshka
- En un solo test, registrar las siguientes acciones y verificar que los test corren
 bien:
    - el juego registra que Ana encontró el primero de los huevos escondidos.
    - En total quedan 3 huevos por encontrar y quedan 2 que tienen chocolate blanco 
    - Todavía no fue encontrado el conejo
    - Verificar la lista de los que tienen chocolate blanco, deben ser huevoRepostero y el huevoMixto
    - Tito encuentra el huevoMixto
    - Jose encuentra los restantes huevos
    - Verificar que Ana y Jose quedan enfermos.

*/

import huevosDePascua.*
import chicos.*
import comienzaElJuego.*

describe "Test narrativo de cacería de huevos de Pascua" {

  method initialize() {
    flor.cantidadPetalos(7)
    blisterHuevitos.cantidadHuevitos(14)
    matrioshka.decoracion(flor)
    matrioshka.cambiarHuevoInterior(blisterHuevitos)
    
  }
    test "Validamos que la matrioshka tenga la mayor cantidad de calorías"{
    assert.equals(matrioshka, comienzaElJuego.huevoMayorCalorias())
    
  }
     test "convinado" {
        // Ana encuentra el primer huevo (la matrioshka)
        comienzaElJuego.encontrarPrimerHuevo(ana)

        // Validamos que fue efectivamente encontrado
        assert.that(comienzaElJuego.huevosEncontrados().contains(matrioshka))
        //Verificamos que queden 2 con chocolate blanco
        assert.equals(2, comienzaElJuego.huevosConChocolateBlanco())
        // Verificamos que el conejo aún no fue encontrado
        assert.that(comienzaElJuego.huevoNoEncontrado(conejo))
        // Verificamos que los huevos con chocolate blanco sean huevoRepostero y huevoMixto
        assert.equals([huevoRepostero, huevoMixto], comienzaElJuego.cualesConChocolateBlanco())
        // Tito encuentra el huevoMixto
        comienzaElJuego.encontrarHuevo(tito, huevoMixto)
        // José encuentra los restantes huevos (huevoRepostero y conejo)
        comienzaElJuego.encontrarTodosLosHuevos(jose)
        // Verificamos que Ana y José estén enfermos
        assert.that(comienzaElJuego.estaEnfermo(ana))
        assert.that(comienzaElJuego.estaEnfermo(jose))
        //verificar lista de huevos encontrados
        
        assert.equals([matrioshka, huevoMixto, huevoRepostero, conejo], comienzaElJuego.huevosEncontrados())
        
     }
}
    
